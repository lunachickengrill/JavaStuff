package com.addressmanagement.infrastructure.persistence;

import java.util.List;

import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.addressmanagement.domain.model.address.Address;
import com.addressmanagement.domain.model.city.City;
import com.addressmanagement.domain.model.country.Country;
import com.addressmanagement.domain.model.location.Location;
import com.addressmanagement.domain.model.region.Region;
import com.addressmanagement.infrastructure.shared.DomainBaseRepository;

@Repository
@Transactional(readOnly = true)
public interface LocationRepository extends DomainBaseRepository<Location, Long> {

	@Override
	public List<Location> findAll();

	@Override
	public Location findOne(Long id);

	public List<Location> findByAddress(Address address);

	public List<Location> findByCity(City city);

	public List<Location> findByCountry(Country country);

	public List<Location> findByRegion(Region region);

	@Modifying
	@Transactional
	@Query("delete from Location l where l.locationId =:id")
	public void deleteLocationById(@Param("id") Long id);

	@Override
	@Modifying
	@Transactional
	public void delete(Location location);

	@Modifying
	@Transactional
	public Location save(Location location);

}
